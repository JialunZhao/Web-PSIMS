<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.psims.web.dao.StoragecheckMapper" >
  <resultMap id="BaseResultMap" type="com.ai.psims.web.model.Storagecheck" >
    <id column="storage_id" property="storageId" jdbcType="INTEGER" />
    <result column="goods_id" property="goodsId" jdbcType="INTEGER" />
    <result column="goods_name" property="goodsName" jdbcType="VARCHAR" />
    <result column="goods_bar_code" property="goodsBarCode" jdbcType="VARCHAR" />
    <result column="provider_id" property="providerId" jdbcType="INTEGER" />
    <result column="provider_name" property="providerName" jdbcType="VARCHAR" />
    <result column="storage_rate_current" property="storageRateCurrent" jdbcType="INTEGER" />
    <result column="ratestorage" property="storageCurrentTotal" jdbcType="INTEGER" />
    <result column="storage_rate_total" property="storageRateTotal" jdbcType="INTEGER" />
    <result column="goods_production_date" property="goodsProductionDate" jdbcType="DATE" />
    <result column="goods_expiration_date" property="goodsExpirationDate" jdbcType="DATE" />
    <result column="goods_shelf_life" property="goodsShelfLife" jdbcType="INTEGER" />
    <result column="goods_price" property="goodsPrice" jdbcType="BIGINT" />
    <result column="goods_status" property="goodsStatus" jdbcType="VARCHAR" />
    <result column="storage_type" property="storageType" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="DATE" />
    <result column="modifytime" property="modifytime" jdbcType="DATE" />
    <result column="endtime" property="endtime" jdbcType="DATE" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="import_serial_number" property="importSerialNumber" jdbcType="VARCHAR" />
    <result column="import_goods_unit" property="importGoodsUnit" jdbcType="VARCHAR" />
    <result column="storage_warning" property="storageWarning" jdbcType="INTEGER" />
    <result column="shelf_life_warning" property="shelfLifeWarning" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    storage_id, goods_id, goods_name, goods_bar_code, provider_id, provider_name, storage_rate_current, 
    storage_rate_total, goods_production_date, goods_expiration_date, goods_shelf_life, 
    goods_price, goods_status, storage_type, createtime, modifytime, endtime, remark, 
    import_serial_number, import_goods_unit, storage_warning, shelf_life_warning
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ai.psims.web.model.StoragecheckExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_storagecheck
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
    <select id="seekStore" resultMap="BaseResultMap">
	  	 SELECT * FROM (SELECT SUM(storage_rate_current) AS ratestorage , tb.*   FROM tb_storagecheck  tb  GROUP BY tb.goods_id) t,(
	 SELECT tb2.storage_warning  AS storage_warning,tb2.goods_id AS goods_id FROM tb_goods tb2 WHERE tb2.goods_id IN (SELECT tb.goods_id FROM tb_storagecheck tb GROUP BY tb.goods_id)) tt  WHERE
	 t.ratestorage &lt; tt.storage_warning AND t.goods_id=tt.goods_id;
  </select>
  <select id="seekBStore" resultMap="BaseResultMap">
	  	SELECT * FROM (SELECT SUM(storage_rate_current) AS ratestorage , tb.*   FROM tb_storagecheck  tb  GROUP BY tb.goods_id) t,(
	  SELECT tb2.storage_warning AS storage_warning,tb2.goods_id AS goods_id FROM tb_goods tb2 WHERE tb2.goods_id IN (SELECT tb.goods_id FROM tb_storagecheck tb GROUP BY tb.goods_id)) tt, 
	 (
	  SELECT tb2.storage_warning*2 AS storage_warning,tb2.goods_id AS goods_id FROM tb_goods tb2 WHERE tb2.goods_id IN (SELECT tb.goods_id FROM tb_storagecheck tb GROUP BY tb.goods_id)) ttt WHERE
	 t.ratestorage BETWEEN tt.storage_warning  AND ttt.storage_warning AND t.goods_id=ttt.goods_id AND t.goods_id=tt.goods_id ;
  </select>
  <select id="seekCStore" resultMap="BaseResultMap">
  		SELECT * FROM (SELECT SUM(storage_rate_current) AS ratestorage , tb.*   FROM tb_storagecheck  tb  GROUP BY tb.goods_id) t,(
	  SELECT tb2.storage_warning*2 AS storage_warning,tb2.goods_id AS goods_id FROM tb_goods tb2 WHERE tb2.goods_id IN (SELECT tb.goods_id FROM tb_storagecheck tb GROUP BY tb.goods_id)) tt, 
	 (
	  SELECT tb2.storage_warning*3 AS storage_warning,tb2.goods_id AS goods_id FROM tb_goods tb2 WHERE tb2.goods_id IN (SELECT tb.goods_id FROM tb_storagecheck tb GROUP BY tb.goods_id)) ttt WHERE
	 t.ratestorage BETWEEN tt.storage_warning  AND ttt.storage_warning AND t.goods_id=ttt.goods_id AND t.goods_id=tt.goods_id ;

  </select>
  <select id="seekDStore" resultMap="BaseResultMap">
  		SELECT * FROM (SELECT SUM(storage_rate_current) AS ratestorage , tb.*   FROM tb_storagecheck  tb  GROUP BY tb.goods_id) t,(
	 SELECT tb2.storage_warning*3  AS storage_warning,tb2.goods_id AS goods_id FROM tb_goods tb2 WHERE tb2.goods_id IN (SELECT tb.goods_id FROM tb_storagecheck tb GROUP BY tb.goods_id)) tt  WHERE
	 t.ratestorage &gt; tt.storage_warning AND t.goods_id=tt.goods_id;
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_storagecheck
    where storage_id = #{storageId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_storagecheck
    where storage_id = #{storageId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ai.psims.web.model.StoragecheckExample" >
    delete from tb_storagecheck
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ai.psims.web.model.Storagecheck" >
    insert into tb_storagecheck (storage_id, goods_id, goods_name, 
      goods_bar_code, provider_id, provider_name, 
      storage_rate_current, storage_rate_total, goods_production_date, 
      goods_expiration_date, goods_shelf_life, goods_price, 
      goods_status, storage_type, createtime, 
      modifytime, endtime, remark, 
      import_serial_number, import_goods_unit, storage_warning, 
      shelf_life_warning)
    values (#{storageId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, #{goodsName,jdbcType=VARCHAR}, 
      #{goodsBarCode,jdbcType=VARCHAR}, #{providerId,jdbcType=INTEGER}, #{providerName,jdbcType=VARCHAR}, 
      #{storageRateCurrent,jdbcType=INTEGER}, #{storageRateTotal,jdbcType=INTEGER}, #{goodsProductionDate,jdbcType=DATE}, 
      #{goodsExpirationDate,jdbcType=DATE}, #{goodsShelfLife,jdbcType=INTEGER}, #{goodsPrice,jdbcType=BIGINT}, 
      #{goodsStatus,jdbcType=VARCHAR}, #{storageType,jdbcType=VARCHAR}, #{createtime,jdbcType=DATE}, 
      #{modifytime,jdbcType=DATE}, #{endtime,jdbcType=DATE}, #{remark,jdbcType=VARCHAR}, 
      #{importSerialNumber,jdbcType=VARCHAR}, #{importGoodsUnit,jdbcType=VARCHAR}, #{storageWarning,jdbcType=INTEGER}, 
      #{shelfLifeWarning,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ai.psims.web.model.Storagecheck" >
    insert into tb_storagecheck
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="storageId != null" >
        storage_id,
      </if>
      <if test="goodsId != null" >
        goods_id,
      </if>
      <if test="goodsName != null" >
        goods_name,
      </if>
      <if test="goodsBarCode != null" >
        goods_bar_code,
      </if>
      <if test="providerId != null" >
        provider_id,
      </if>
      <if test="providerName != null" >
        provider_name,
      </if>
      <if test="storageRateCurrent != null" >
        storage_rate_current,
      </if>
      <if test="storageRateTotal != null" >
        storage_rate_total,
      </if>
      <if test="goodsProductionDate != null" >
        goods_production_date,
      </if>
      <if test="goodsExpirationDate != null" >
        goods_expiration_date,
      </if>
      <if test="goodsShelfLife != null" >
        goods_shelf_life,
      </if>
      <if test="goodsPrice != null" >
        goods_price,
      </if>
      <if test="goodsStatus != null" >
        goods_status,
      </if>
      <if test="storageType != null" >
        storage_type,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="modifytime != null" >
        modifytime,
      </if>
      <if test="endtime != null" >
        endtime,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="importSerialNumber != null" >
        import_serial_number,
      </if>
      <if test="importGoodsUnit != null" >
        import_goods_unit,
      </if>
      <if test="storageWarning != null" >
        storage_warning,
      </if>
      <if test="shelfLifeWarning != null" >
        shelf_life_warning,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="storageId != null" >
        #{storageId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null" >
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="goodsName != null" >
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsBarCode != null" >
        #{goodsBarCode,jdbcType=VARCHAR},
      </if>
      <if test="providerId != null" >
        #{providerId,jdbcType=INTEGER},
      </if>
      <if test="providerName != null" >
        #{providerName,jdbcType=VARCHAR},
      </if>
      <if test="storageRateCurrent != null" >
        #{storageRateCurrent,jdbcType=INTEGER},
      </if>
      <if test="storageRateTotal != null" >
        #{storageRateTotal,jdbcType=INTEGER},
      </if>
      <if test="goodsProductionDate != null" >
        #{goodsProductionDate,jdbcType=DATE},
      </if>
      <if test="goodsExpirationDate != null" >
        #{goodsExpirationDate,jdbcType=DATE},
      </if>
      <if test="goodsShelfLife != null" >
        #{goodsShelfLife,jdbcType=INTEGER},
      </if>
      <if test="goodsPrice != null" >
        #{goodsPrice,jdbcType=BIGINT},
      </if>
      <if test="goodsStatus != null" >
        #{goodsStatus,jdbcType=VARCHAR},
      </if>
      <if test="storageType != null" >
        #{storageType,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=DATE},
      </if>
      <if test="modifytime != null" >
        #{modifytime,jdbcType=DATE},
      </if>
      <if test="endtime != null" >
        #{endtime,jdbcType=DATE},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="importSerialNumber != null" >
        #{importSerialNumber,jdbcType=VARCHAR},
      </if>
      <if test="importGoodsUnit != null" >
        #{importGoodsUnit,jdbcType=VARCHAR},
      </if>
      <if test="storageWarning != null" >
        #{storageWarning,jdbcType=INTEGER},
      </if>
      <if test="shelfLifeWarning != null" >
        #{shelfLifeWarning,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ai.psims.web.model.StoragecheckExample" resultType="java.lang.Integer" >
    select count(*) from tb_storagecheck
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_storagecheck
    <set >
      <if test="record.storageId != null" >
        storage_id = #{record.storageId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null" >
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsName != null" >
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsBarCode != null" >
        goods_bar_code = #{record.goodsBarCode,jdbcType=VARCHAR},
      </if>
      <if test="record.providerId != null" >
        provider_id = #{record.providerId,jdbcType=INTEGER},
      </if>
      <if test="record.providerName != null" >
        provider_name = #{record.providerName,jdbcType=VARCHAR},
      </if>
      <if test="record.storageRateCurrent != null" >
        storage_rate_current = #{record.storageRateCurrent,jdbcType=INTEGER},
      </if>
      <if test="record.storageRateTotal != null" >
        storage_rate_total = #{record.storageRateTotal,jdbcType=INTEGER},
      </if>
      <if test="record.goodsProductionDate != null" >
        goods_production_date = #{record.goodsProductionDate,jdbcType=DATE},
      </if>
      <if test="record.goodsExpirationDate != null" >
        goods_expiration_date = #{record.goodsExpirationDate,jdbcType=DATE},
      </if>
      <if test="record.goodsShelfLife != null" >
        goods_shelf_life = #{record.goodsShelfLife,jdbcType=INTEGER},
      </if>
      <if test="record.goodsPrice != null" >
        goods_price = #{record.goodsPrice,jdbcType=BIGINT},
      </if>
      <if test="record.goodsStatus != null" >
        goods_status = #{record.goodsStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.storageType != null" >
        storage_type = #{record.storageType,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=DATE},
      </if>
      <if test="record.modifytime != null" >
        modifytime = #{record.modifytime,jdbcType=DATE},
      </if>
      <if test="record.endtime != null" >
        endtime = #{record.endtime,jdbcType=DATE},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.importSerialNumber != null" >
        import_serial_number = #{record.importSerialNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.importGoodsUnit != null" >
        import_goods_unit = #{record.importGoodsUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.storageWarning != null" >
        storage_warning = #{record.storageWarning,jdbcType=INTEGER},
      </if>
      <if test="record.shelfLifeWarning != null" >
        shelf_life_warning = #{record.shelfLifeWarning,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_storagecheck
    set storage_id = #{record.storageId,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      goods_bar_code = #{record.goodsBarCode,jdbcType=VARCHAR},
      provider_id = #{record.providerId,jdbcType=INTEGER},
      provider_name = #{record.providerName,jdbcType=VARCHAR},
      storage_rate_current = #{record.storageRateCurrent,jdbcType=INTEGER},
      storage_rate_total = #{record.storageRateTotal,jdbcType=INTEGER},
      goods_production_date = #{record.goodsProductionDate,jdbcType=DATE},
      goods_expiration_date = #{record.goodsExpirationDate,jdbcType=DATE},
      goods_shelf_life = #{record.goodsShelfLife,jdbcType=INTEGER},
      goods_price = #{record.goodsPrice,jdbcType=BIGINT},
      goods_status = #{record.goodsStatus,jdbcType=VARCHAR},
      storage_type = #{record.storageType,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=DATE},
      modifytime = #{record.modifytime,jdbcType=DATE},
      endtime = #{record.endtime,jdbcType=DATE},
      remark = #{record.remark,jdbcType=VARCHAR},
      import_serial_number = #{record.importSerialNumber,jdbcType=VARCHAR},
      import_goods_unit = #{record.importGoodsUnit,jdbcType=VARCHAR},
      storage_warning = #{record.storageWarning,jdbcType=INTEGER},
      shelf_life_warning = #{record.shelfLifeWarning,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ai.psims.web.model.Storagecheck" >
    update tb_storagecheck
    <set >
      <if test="goodsId != null" >
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="goodsName != null" >
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsBarCode != null" >
        goods_bar_code = #{goodsBarCode,jdbcType=VARCHAR},
      </if>
      <if test="providerId != null" >
        provider_id = #{providerId,jdbcType=INTEGER},
      </if>
      <if test="providerName != null" >
        provider_name = #{providerName,jdbcType=VARCHAR},
      </if>
      <if test="storageRateCurrent != null" >
        storage_rate_current = #{storageRateCurrent,jdbcType=INTEGER},
      </if>
      <if test="storageRateTotal != null" >
        storage_rate_total = #{storageRateTotal,jdbcType=INTEGER},
      </if>
      <if test="goodsProductionDate != null" >
        goods_production_date = #{goodsProductionDate,jdbcType=DATE},
      </if>
      <if test="goodsExpirationDate != null" >
        goods_expiration_date = #{goodsExpirationDate,jdbcType=DATE},
      </if>
      <if test="goodsShelfLife != null" >
        goods_shelf_life = #{goodsShelfLife,jdbcType=INTEGER},
      </if>
      <if test="goodsPrice != null" >
        goods_price = #{goodsPrice,jdbcType=BIGINT},
      </if>
      <if test="goodsStatus != null" >
        goods_status = #{goodsStatus,jdbcType=VARCHAR},
      </if>
      <if test="storageType != null" >
        storage_type = #{storageType,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=DATE},
      </if>
      <if test="modifytime != null" >
        modifytime = #{modifytime,jdbcType=DATE},
      </if>
      <if test="endtime != null" >
        endtime = #{endtime,jdbcType=DATE},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="importSerialNumber != null" >
        import_serial_number = #{importSerialNumber,jdbcType=VARCHAR},
      </if>
      <if test="importGoodsUnit != null" >
        import_goods_unit = #{importGoodsUnit,jdbcType=VARCHAR},
      </if>
      <if test="storageWarning != null" >
        storage_warning = #{storageWarning,jdbcType=INTEGER},
      </if>
      <if test="shelfLifeWarning != null" >
        shelf_life_warning = #{shelfLifeWarning,jdbcType=INTEGER},
      </if>
    </set>
    where storage_id = #{storageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ai.psims.web.model.Storagecheck" >
    update tb_storagecheck
    set goods_id = #{goodsId,jdbcType=INTEGER},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_bar_code = #{goodsBarCode,jdbcType=VARCHAR},
      provider_id = #{providerId,jdbcType=INTEGER},
      provider_name = #{providerName,jdbcType=VARCHAR},
      storage_rate_current = #{storageRateCurrent,jdbcType=INTEGER},
      storage_rate_total = #{storageRateTotal,jdbcType=INTEGER},
      goods_production_date = #{goodsProductionDate,jdbcType=DATE},
      goods_expiration_date = #{goodsExpirationDate,jdbcType=DATE},
      goods_shelf_life = #{goodsShelfLife,jdbcType=INTEGER},
      goods_price = #{goodsPrice,jdbcType=BIGINT},
      goods_status = #{goodsStatus,jdbcType=VARCHAR},
      storage_type = #{storageType,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=DATE},
      modifytime = #{modifytime,jdbcType=DATE},
      endtime = #{endtime,jdbcType=DATE},
      remark = #{remark,jdbcType=VARCHAR},
      import_serial_number = #{importSerialNumber,jdbcType=VARCHAR},
      import_goods_unit = #{importGoodsUnit,jdbcType=VARCHAR},
      storage_warning = #{storageWarning,jdbcType=INTEGER},
      shelf_life_warning = #{shelfLifeWarning,jdbcType=INTEGER}
    where storage_id = #{storageId,jdbcType=INTEGER}
  </update>
</mapper>